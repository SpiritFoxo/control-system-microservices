{
    "swagger": "2.0",
    "info": {
        "description": "API для управления заказами в системе",
        "title": "Orders Service API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/api/v1",
    "paths": {
        "/orders": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new order with provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "description": "Order creation data",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CreateOrderInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created order",
                        "schema": {
                            "$ref": "#/definitions/services.OrderResponse"
                        }
                    }
                }
            }
        },
        "/orders/{orderId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Gets order by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order data",
                        "schema": {
                            "$ref": "#/definitions/services.OrderResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an order by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Delete an order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Update an order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order update data",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.UpdateOrderInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated order",
                        "schema": {
                            "$ref": "#/definitions/services.OrderResponse"
                        }
                    }
                }
            }
        },
        "/v1/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a paginated list of orders with optional userId and status filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get list of orders",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of records per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by user ID",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by order status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders with pagination",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "services.CreateOrderInput": {
            "type": "object",
            "required": [
                "cost",
                "order_items",
                "status",
                "user_id"
            ],
            "properties": {
                "cost": {
                    "type": "integer",
                    "minimum": 0
                },
                "order_items": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/services.OrderItemInput"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "created",
                        "in_progress",
                        "completed",
                        "cancelled"
                    ]
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "services.OrderItemInput": {
            "type": "object",
            "required": [
                "name",
                "quantity"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "services.OrderItemResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "services.OrderResponse": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "order_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.OrderItemResponse"
                    }
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "services.UpdateOrderInput": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "created",
                        "in_progress",
                        "completed",
                        "cancelled"
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}